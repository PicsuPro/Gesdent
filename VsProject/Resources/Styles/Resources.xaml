<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>

    <Style x:Key="WindowButton" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource primaryFore1}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupWindowMainButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource primary1}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Calibri"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource primaryBack1Alt}"/>
                <Setter Property="Foreground" Value="{StaticResource primary1}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource primaryBack1Alt}"/>
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DataGridButtonsStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=IsMouseOver}" Value="True">
                            <Setter Property="Opacity" Value="0.5"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!--DATAGRID-->
    <Style x:Key="DropHeaderStyle" TargetType="{x:Type Separator}">
        <Setter Property="BorderThickness"  Value="5"/>
        <Setter Property="BorderBrush" Value="#0049B3"/>
    </Style>
    <Style TargetType="DataGrid">
        <Setter Property="DropLocationIndicatorStyle" Value="{StaticResource DropHeaderStyle}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="9,3,9,9" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Foreground" Value="{StaticResource primaryFore1}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Margin" Value="10,7,10,7" />
    </Style>
    
    <Style TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F9F9FA"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Name="HeaderGrid" Background="#F0F2F5" Margin="0,3,0,3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Margin="11,6,12,6" VerticalAlignment="Center" Grid.Column="0" />
                        <Path x:Name="SortArrow" Opacity="0" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"
                          Grid.Column="1" Width="8" Height="6" Fill="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=Foreground}"  
                              Margin="0,0,6,0"
                          HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.4" >

                        </Path>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"  Cursor="SizeWE"
                           Grid.Column="1">
                            <Thumb.Style >
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="2" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="Transparent"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>


                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                            <Setter TargetName="SortArrow" Property="Margin" Value="-3,0,6,-1" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                            <Setter TargetName="SortArrow" Property="Margin" Value="-3,0,6,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>